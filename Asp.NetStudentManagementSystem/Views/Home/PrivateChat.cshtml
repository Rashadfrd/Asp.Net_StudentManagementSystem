@using Asp.NetStudentManagementSystem.Models
@using Asp.NetStudentManagementSystem.ViewModels

@{
    ViewData["Title"] = "Canlı dəstək";
    Layout = null;
}


 @model HomeVM
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
 <link rel="stylesheet" href="~/assets/css/indexstyle.css">
 <link rel="stylesheet" href="~/assets/css/webchat.css" />

     <header>
        <nav class="header-navbar navbar navbar-expand-lg">
            <div class="container-fluid text-light">
                <div class="header-navbar-logo d-flex justify-content-center align-items-center">
                    <div class="header-navbar-logo__img me-3">
                        <img src="https://unec.edu.az/application/uploads/2016/02/UNEC-logo-ENG-.png" width="65" alt="">
                    </div>
                    <h5 class="header-navbar-title">Azərbaycan Dövlət <br> İqtisad Universiteti</h5>
                </div>
                <div class="header-nav-breadcrumb">
                    <span class="exit"><i class="fa-solid fa-door-open me-2"></i> <a class="exit" asp-controller="Account" asp-action="SignOut">Çıxış</a></span>
                    <input type="checkbox" id="switch" />
                    <label class="switch-label ms-4" for="switch">Toggle</label>
                </div>
            </div>
        </nav>
    </header>
 <div class="container">

 <div class="container p-2">
         <div class="col-4"><input type="hidden" name="Sendername" value="@Model.CurrentUser.Name.ToString()" id="senderNameInput" /></div>
     <div class="row">
         @*<div class="col-2">Sender</div>*@
         <div class="col-4"><input type="hidden" name="Sender" value="@Model.CurrentUser.Email.ToString()" id="senderInput" /></div>
     </div>
     <div class="row">
         @if (!User.IsInRole("SuperAdmin"))
        {
         <div class="col-2" style="font-size:21px"><span>Canlı Dəstək</span></div>
         <div class="col-4"><input type="hidden" name="Receiver" value="@ViewBag.receiver" id="receiverInput" /></div>
        }
        else
        {
         <div class="col-6" style="font-size:21px"><span>@ViewBag.receiverNameFiltered</span><span> @ViewBag.receiverSurnameFiltered</span><span> @ViewBag.receiverFiltered</span></div>
         <div class="col-4"><input type="hidden" name="Receiver" value="@ViewBag.receiverFiltered" id="receiverInput" /></div>
        }
     </div>
 </div>
     <div class="col-12">
         <hr />
     </div>
 <div class="row" style="padding:5px">
     @if (!User.IsInRole("SuperAdmin"))
    {
     <div class="col-12" style="display:flex;flex-direction:column;justify-content:center;align-items:center;">
      <div id="data-box" class="col-12" style="background-color:#edf0f9;height:58vh;overflow-x:hidden;overflow-y:scroll;border-radius:16px 16px 0 0">
         <ul id="messagesList" style="list-style:none;display:flex;flex-direction:column">
             @foreach (var item in Model.UserMessages.OrderBy(x=>x.SentDate))
            {
                if (@item.ReceiverId == Model.CurrentUser.Id)
                {
                <li style="font-size:17px;align-self:flex-start;display:inline;background-color:white; border-radius:18px;padding:7px 30px 7px 10px; margin:5px;border-top-left-radius:0px"><span style="font-size:11px; padding:5px">@item.SentDate.ToString("HH:mm")</span>@item.Messages.Content</li>
                }
                else
                {
                <li style="color:white;font-size:17px;align-self:flex-end;display:inline;background-color:#144365; border-radius:18px;margin:5px; padding:7px 10px 7px 30px; border-top-right-radius:0px;">@item.Messages.Content<span style="font-size:11px; padding:5px">@item.SentDate.ToString("HH:mm")</span></li>
                }
            }
         </ul>
     </div>
      <div class="row col-12">
         <div class="col-12" style="display:flex;flex-direction:column;align-items:end;background-color:#edf0f9;padding:15px;position:relative;border-radius:0 0 16px 16px">
             <textarea placeholder="Mesaj yaz" name="Message" id="messageInput" rows="3" style="width:100%;resize:none; height:auto;border:1px solid #ccc; border-radius:10px;border;padding:15px;outline:none;" ></textarea>
             <button type="button"id="sendButton" style="border:1px solid #ccc;width:50px;border-radius:50%;height:50px;position:absolute;bottom:0;right:0;background-color:white"><i class="fa-solid fa-paper-plane" style="font-size:15px"></i></button>
         </div>
        </div>
     </div>
     }
     else
    {
    <div class="col-9" style="display:flex;flex-direction:column;justify-content:center;align-items:center;">
        <div id="data-box" class="col-12" style="background-color:#edf0f9;height:58vh;overflow-x:hidden;overflow-y:scroll;border-radius:16px 16px 0 0">
             <ul id="messagesList" style="list-style:none;display:flex;flex-direction:column;padding:15px">
             @if (Model.AdminFilteredMessages != null)
             {
                foreach (var item in Model.AdminFilteredMessages.OrderBy(x=>x.SentDate))
                {
                     if (@item.ReceiverId == Model.CurrentUser.Id)
                     {
                        <li id="whosent" class="@Model.AllUsers.FirstOrDefault(x=>x.Id == @item.SenderId).Email" style="font-size:17px;align-self:flex-start;display:inline;background-color:white; border-radius:18px;padding:7px 30px 7px 10px; margin:5px;border-top-left-radius:0px"><span style="font-size:11px; padding:5px">@item.SentDate.ToString("HH:mm")</span>@item.Messages.Content</li>
                     }
                     else
                     {
                        <li style="color:white;font-size:17px;align-self:flex-end;display:inline;background-color:#144365; border-radius:18px;margin:5px; padding:7px 10px 7px 30px; border-top-right-radius:0px;">@item.Messages.Content<span style="font-size:11px; padding:5px">@item.SentDate.ToString("HH:mm")</span></li>
                     }
                }
             }
         </ul>
        </div>   
      <div class="row col-12">
         <div class="col-12" style="display:flex;flex-direction:column;align-items:end;background-color:#edf0f9;padding:15px;position:relative;border-radius:0 0 16px 16px">
             <textarea placeholder="Mesaj yaz" name="Message" id="messageInput" rows="3" style="width:100%;resize:none; height:auto;border:1px solid #ccc; border-radius:10px;border;padding:15px;outline:none;" ></textarea>
             <button type="button"id="sendButton" style="border:1px solid #ccc;width:50px;border-radius:50%;height:50px;position:absolute;bottom:0;right:0;background-color:white"><i class="fa-solid fa-paper-plane" style="font-size:15px"></i></button>
         </div>
        </div>
    </div>
     <div class="row col-3">
         <ul id="single-messages" style="list-style:none;padding:0;margin:0;">
             @foreach (var item in Model.AllUsers)
             {   
                foreach (var msg in Model.AdminMessages.Where(x=>x.SenderId == item.Id ).OrderByDescending(x=>x.SentDate))
                {
                    <a style="text-decoration:none;color:black" asp-route-email="@Model.AllUsers.FirstOrDefault(x=>x.Id == msg.SenderId).Email">
                    <li style="padding:5px 15px;height:65px;border:1px solid #ccc; margin-bottom:5px;border-radius:8px;background-color:#f5f5fd">
                        <div>@item.Name</div>
                        <div id="@Model.AllUsers.FirstOrDefault(x=>x.Id == msg.SenderId).Email" style="height:20px;overflow:hidden">@msg.Messages.Content<div/>
                    </li>
                    </a>
                    break;
                 }
             }
         </ul>
     </div>
    }
 </div>
 </div>

 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" 
 integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script> 
 <script src="~/js/signalr/dist/browser/signalr.js"></script>
 <script>
     "use strict";

var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

//Disable send button until connection is established
document.getElementById("sendButton").disabled = true;

connection.on("ReceiveMessage", function (user, sendername, message) {
    /*    var senders = JSON.parse(localStorage.getItem("senders")) || [];*/
    var whoSent = document.getElementById('whosent')
    var sentMessage = document.getElementById("messageInput");
    sentMessage.value = " ";
    var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    var encodedMsg = msg;
    var li = document.createElement("li");
    var span = document.createElement("span");
    var now = new Date();
    const hoursAndMinutes =
        padTo2Digits(now.getHours()) + ':' + padTo2Digits(now.getMinutes());
    span.textContent = hoursAndMinutes;
    span.style.padding = "5px"
    li.style.borderRadius = "18px"
    li.style.margin = "5px"
    li.style.display = "inline"
    li.style.fontSize = "17px"
    span.style.fontSize = "11px"

    if (user == document.getElementById("receiverInput").value) {

        if (user == document.getElementById("senderInput").value) {
            li.style.textAlign = "end"
            li.style.borderTopRightRadius = "0px"
            li.style.backgroundColor = "#144365"
            li.style.color = "white"
            li.style.padding = "7px 10px 7px 30px"
            li.style.alignSelf = "flex-end"
            li.textContent = encodedMsg;
            li.appendChild(span);
            document.getElementById("messagesList").appendChild(li);
            var elem = document.getElementById('data-box');
            elem.scrollTop = elem.scrollHeight * 2;
        }
        else {
            li.style.borderTopLeftRadius = "0px"
            li.style.backgroundColor = "white"
            li.style.padding = "7px 30px 7px 10px"
            li.style.alignSelf = "flex-start"
            li.textContent = encodedMsg;
            li.prepend(span);
            document.getElementById("messagesList").appendChild(li);
            var elem = document.getElementById('data-box');
            elem.scrollTop = elem.scrollHeight * 2;

            if (document.getElementById(user)) {
                var singleMsg = document.getElementById(user)
                singleMsg.textContent = encodedMsg

            }
            else {
                var newInboxAnchor = document.createElement("a")
                newInboxAnchor.setAttribute('asp-route-email', user)
                var newInbox = document.createElement("li")
                newInbox.style.padding = "5px 15px"
                newInbox.style.height = "65px"
                newInbox.style.border = "1px solid #ccc"
                newInbox.style.marginBottom = "5px"
                newInbox.style.backgroundColor = "#f5f5fd"
                newInbox.style.borderRadius = "8px"
                var msgwrapper = document.createElement("div")
                msgwrapper.textContent = encodedMsg
                msgwrapper.setAttribute('id', user)
                newInbox.appendChild(msgwrapper)
                var namewrapper = document.createElement("div")
                namewrapper.textContent = sendername
                newInbox.prepend(namewrapper)
                newInboxAnchor.appendChild(newInbox)
                var singleMsg = document.getElementById("single-messages")
                singleMsg.appendChild(newInboxAnchor)
            }
        }
    }
    else {

        if (user == document.getElementById("senderInput").value) {
            li.style.textAlign = "end"
            li.style.borderTopRightRadius = "0px"
            li.style.backgroundColor = "#144365"
            li.style.color = "white"
            li.style.padding = "7px 10px 7px 30px"
            li.style.alignSelf = "flex-end"
            li.textContent = encodedMsg;
            li.appendChild(span);
            document.getElementById("messagesList").appendChild(li);
            var elem = document.getElementById('data-box');
            elem.scrollTop = elem.scrollHeight * 2;
        }
        else {

            if (document.getElementById(user)) {
                var singleMsg = document.getElementById(user)
                singleMsg.textContent = encodedMsg

            }
            else {
                var newInboxAnchor = document.createElement("a")
                newInboxAnchor.setAttribute('asp-route-email', user)
                var newInbox = document.createElement("li")
                newInbox.style.padding = "5px 15px"
                newInbox.style.height = "65px"
                newInbox.style.border = "1px solid #ccc"
                newInbox.style.backgroundColor = "#f5f5fd"
                newInbox.style.marginBottom = "5px"
                newInbox.style.borderRadius = "8px"
                var msgwrapper = document.createElement("div")
                msgwrapper.textContent = encodedMsg
                msgwrapper.setAttribute('id', user)
                newInbox.appendChild(msgwrapper)
                var namewrapper = document.createElement("div")
                namewrapper.textContent = sendername
                newInbox.prepend(namewrapper)
                newInboxAnchor.appendChild(newInbox)
                var singleMsg = document.getElementById("single-messages")
                singleMsg.appendChild(newInboxAnchor)
            }
        }
    }
});

connection.start().then(function () {
    document.getElementById("sendButton").disabled = false;
}).catch(function (err) {
    return console.error(err.toString());
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    var sendername = document.getElementById("senderNameInput").value;
    var sender = document.getElementById("senderInput").value;
    var receiver = document.getElementById("receiverInput").value;
    var message = document.getElementById("messageInput").value;

    if (receiver != "") {

        connection.invoke("SendMessageToGroup", sendername, sender, receiver, message).catch(function (err) {
            return console.error(err.toString());
        });
    }
    else {
        connection.invoke("SendMessage", sender, message).catch(function (err) {
            return console.error(err.toString());
        });
    }
    message = " ";

    event.preventDefault();
});
var elem = document.getElementById('data-box');
elem.scrollTop = elem.scrollHeight * 2;

function padTo2Digits(num) {
    return String(num).padStart(2, '0');
}
 </script>

